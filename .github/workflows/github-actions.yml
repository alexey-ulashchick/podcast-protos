name: build
on:
  - push
  - workflow_dispatch
jobs:
  java-from-protos:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v2

      - name: Set up JDK 13
        uses: actions/setup-java@v1
        with:
          java-version: 13

      - name: Building Protos
        working-directory: ./env-java
        run: ./gradlew build

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: v.1.0.${{ GITHUB_RUN_NUMBER }}
          draft: false
          prerelease: false

      # - name: Bintray Upload
      #   working-directory: ./env-java
      #   env:
      #     JFROG_USER: ${{ secrets.JFROG_USER }}
      #     JFROG_API_KEY: ${{ secrets.JFROG_API_KEY }}
      #   run: |
      #     ./gradlew bintrayUpload


  typescript-from-protos:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          always-auth: true
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'
          scope: '@alexey-ulashchick'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Setup PROTOC compiler
        uses: abelfodil/protoc-action@v1
        with:
          protoc-version: '3.13.0'

      - name: Change version
        working-directory: ./env-nodejs
        run: |
          NPM_VERSION=1.0.$GITHUB_RUN_NUMBER
          npm version $NPM_VERSION --no-git-tag-version

      - name: NPM install
        working-directory: ./env-nodejs
        run: npm install

      - name: Compile protos
        run: |
          protoc \
            --plugin="protoc-gen-ts=env-nodejs/node_modules/.bin/protoc-gen-ts" \
            --js_out="import_style=commonjs,binary:env-nodejs" \
            --ts_out="service=grpc-web:env-nodejs" \
            ./protos/**

      - name: Publish
        working-directory: ./env-nodejs
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access=public --loglevel verbose




